---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: droppy-config
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-default
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: droppy-data
  namespace: default
  labels:
    name: droppy-data
spec:
  capacity:
    storage: 1Pi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  nfs:
    path: /mnt/data/docs
    server: callisto.wellesleynet.com
  mountOptions:
  - nfsvers=4.1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: droppy-data
  namespace: default
spec:
  selector:
    matchLabels:
      name: droppy-data
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Pi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: droppy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: droppy
  serviceName: "droppy"
  template:
    metadata:
      labels:
        app: droppy
    spec:
      containers:
      - image: silverwind/droppy:12.2.0
        imagePullPolicy: Always
        name: droppy
        ports:
        - containerPort: 8989
        volumeMounts:
        - name: droppy-data
          mountPath: /files
        - name: droppy-config
          mountPath: /config
        env:
        - name: TZ
          value: 'America/New_York'
        livenessProbe:
          exec:
            command:
            - ls
            - /config/lost+found
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: droppy-data
        persistentVolumeClaim:
          claimName: droppy-data
      - name: droppy-config
        persistentVolumeClaim:
          claimName: droppy-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: droppy
spec:
  selector:
    app: droppy
  ports:
  - name: droppy
    port: 8989
    protocol: TCP
    targetPort: 8989
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: droppy
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/auth-url: "https://authelia.kiski.co/api/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://authelia.kiski.co"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: droppy.kiski.co
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: droppy
            port:
              number: 8989
  - host: files.kiski.co
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: droppy
            port:
              number: 8989
  tls:
  - hosts:
    - droppy.kiski.co
    secretName: droppy-kiski-co-tls
  - hosts:
    - files.kiski.co
    secretName: files-kiski-co-tls
