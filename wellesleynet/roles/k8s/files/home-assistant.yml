---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: home-assistant-config
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn-default
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: home-assistant-zwave
  namespace: default
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: longhorn-default
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: home-assistant
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: home-assistant
  serviceName: "home-assistant"
  template:
    metadata:
      labels:
        app: home-assistant
    spec:
      containers:
      - image: homeassistant/home-assistant:2023.3.5
        imagePullPolicy: Always
        name: home-assistant
        ports:
        - containerPort: 8123
        livenessProbe:
          exec:
            command:
            - ls
            - /config/lost+found
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: home-assistant-config
          mountPath: /config/
        - name: home-assistant-usb1
          mountPath: /dev/ttyUSB1
        securityContext:
          privileged: true
      - image: zwavejs/zwave-js-ui:8.10.0
        imagePullPolicy: Always
        name: home-assistant-zwave
        ports:
        - containerPort: 8091
        - containerPort: 3000
        livenessProbe:
          exec:
            command:
            - ls
            - /usr/src/app/store/lost+found
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: home-assistant-zwave
          mountPath: /usr/src/app/store
        - name: home-assistant-usb0
          mountPath: /dev/zwave
        securityContext:
          privileged: true
      nodeSelector:
        has_zwave_dongle: "true"
      volumes:
      - name: home-assistant-config
        persistentVolumeClaim:
          claimName: home-assistant-config
      - name: home-assistant-zwave
        persistentVolumeClaim:
          claimName: home-assistant-zwave
      - name: home-assistant-usb0
        hostPath:
          path: /dev/ttyUSB0
          type: CharDevice
      - name: home-assistant-usb1
        hostPath:
          path: /dev/ttyUSB1
          type: CharDevice
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: home-assistant
spec:
  selector:
    app: home-assistant
  ports:
  - name: home-assistant
    port: 8123
    protocol: TCP
    targetPort: 8123
  - name: home-assistant-zwave
    port: 8091
    protocol: TCP
    targetPort: 8091
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: avcad.kiski.co
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: home-assistant
            port:
              number: 8123
  tls:
  - hosts:
    - avcad.kiski.co
    secretName: avcad-kiski-co-tls
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: home-assistant-zwave
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/auth-url: "https://authelia.kiski.co/api/verify"
    nginx.ingress.kubernetes.io/auth-signin: "https://authelia.kiski.co"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: zwave.kiski.co
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: home-assistant
            port:
              number: 8091
  tls:
  - hosts:
    - zwave.kiski.co
    secretName: zwave-kiski-co-tls
